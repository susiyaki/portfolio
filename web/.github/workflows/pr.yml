name: check pr

on:
  pull_request:
    branches: "*"
    types: [opened, edited, synchronize, reopened, ready_for_review]

jobs:
  # Lint:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v1
  #     - name: Cache node modules
  #       uses: actions/cache@v2
  #       with:
  #         path: ~/.cache/yarn
  #         key: ${{ runner.os }}-portfolio-${{ hashFiles(format('{0}{1}', github.workspace, '/yarn.lock')) }}
  #         restore-keys: ${{ runner.os }}-portfolio-
  #     - name: Install node_modules
  #       if: steps.cache.outputs.cache-hit != 'true'
  #       run: yarn install
  #     - name: Lint
  #       run: yarn lint

  TypeCheck:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: ~/.cache/yarn
          key: ${{ runner.os }}-portfolio-${{ hashFiles(format('{0}{1}', github.workspace, '/yarn.lock')) }}
          restore-keys: ${{ runner.os }}-portfolio-
      - name: Install node_modules
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn install
      - name: typecheck
        run: yarn typecheck

  # Jest:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v1
  #     - name: Cache node modules
  #       uses: actions/cache@v2
  #       with:
  #         path: ~/.cache/yarn
  #         key: ${{ runner.os }}-portfolio-${{ hashFiles(format('{0}{1}', github.workspace, '/yarn.lock')) }}
  #         restore-keys: ${{ runner.os }}-portfolio-
  #     - name: Install node_modules
  #       if: steps.cache.outputs.cache-hit != 'true'
  #       run: yarn install
  #     - name: Run Jest
  #       run: yarn jest
